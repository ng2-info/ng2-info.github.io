<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Planning on Angular2 Info</title>
    <link>https://ng2-info.github.io/tags/planning/</link>
    <description>Recent content in Planning on Angular2 Info</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Tue, 12 Apr 2016 21:24:38 +0900</lastBuildDate>
    <atom:link href="https://ng2-info.github.io/tags/planning/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>週次ミーティング</title>
      <link>https://ng2-info.github.io/2016/04/weekly-meeting-apr-12/</link>
      <pubDate>Tue, 12 Apr 2016 21:24:38 +0900</pubDate>
      
      <guid>https://ng2-info.github.io/2016/04/weekly-meeting-apr-12/</guid>
      <description>

&lt;p&gt;どうも、らこです。今週も週次ミーティングの内容を噛み砕いて紹介します。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;4-11-週次ミーティング&#34;&gt;4/11 週次ミーティング&lt;/h2&gt;

&lt;h3 id=&#34;コアライブラリの変更&#34;&gt;コアライブラリの変更&lt;/h3&gt;

&lt;p&gt;Angular 2のコア部分に2つ大きな変更があります。&lt;/p&gt;

&lt;p&gt;1つ目は、テンプレートのコンパイルやDIの解決、Change Detectionなどのコア機能を静的コード生成に委ねるようにする変更です。&lt;br /&gt;
この変更によりパフォーマンスが格段に改善されるとともに、アプリケーションのデプロイ時のサイズを削減することができます。&lt;/p&gt;

&lt;p&gt;2つ目はbootstrapの方法が変わり、ツリーシェイキングやデッドコードの削除が可能になります。&lt;/p&gt;

&lt;h3 id=&#34;angular-material-2&#34;&gt;Angular Material 2&lt;/h3&gt;

&lt;p&gt;Angular Material 2のAlpha.2がリリースされました。&lt;br /&gt;
今後のリリース予定についてはGitHubのマイルストーンで確認できます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/angular/material2/milestones&#34; target=&#34;_blank&#34;&gt;Milestones - angular/material2&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;ドキュメンテーション&#34;&gt;ドキュメンテーション&lt;/h3&gt;

&lt;p&gt;今後もドキュメンテーションの拡充を進めていきます。「Why Angular?」というコンテンツが追加される予定で、&lt;br /&gt;
ドキュメンテーションのランディングページも改善されます。&lt;/p&gt;

&lt;p&gt;また、モバイル向けの情報やプラットフォームなどにより細かくサブドメインを分けます。&lt;/p&gt;

&lt;p&gt;angular.ioには新しく次のドキュメントが追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://angular.io/docs/ts/latest/cookbook/component-communication.html&#34; target=&#34;_blank&#34;&gt;Component Interaction - ts&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://angular.io/docs/ts/latest/cookbook/dependency-injection.html&#34; target=&#34;_blank&#34;&gt;Dependency Injection - ts&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://angular.io/docs/ts/latest/cookbook/dynamic-form.html&#34; target=&#34;_blank&#34;&gt;Dynamic Form - ts&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://angular.io/docs/ts/latest/guide/component-styles.html&#34; target=&#34;_blank&#34;&gt;Component Styles - ts&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;周辺ツール&#34;&gt;周辺ツール&lt;/h3&gt;

&lt;h3 id=&#34;スタイルガイド&#34;&gt;スタイルガイド&lt;/h3&gt;

&lt;p&gt;John Papaがスタイルガイドの開発をMinko Gechevらと進めています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mgechev/angular2-style-guide&#34; target=&#34;_blank&#34;&gt;mgechev/angular2-style-guide: Community-driven set of best practices and style guidelines for Angular 2 application development&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;angular-cli&#34;&gt;Angular CLI&lt;/h4&gt;

&lt;p&gt;スタイルガイドをもとにコードのブループリントを実装しています。&lt;br /&gt;
その次にはオフラインテンプレートコンパイルとの連携を実装します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/angular/angular-cli&#34; target=&#34;_blank&#34;&gt;angular/angular-cli: CLI tool for Angular2&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;batarangle&#34;&gt;Batarangle&lt;/h4&gt;

&lt;p&gt;Batarangleはもうすぐ正式リリースされます。&lt;br /&gt;
コンポーネントやDI、ルートの可視化ができます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rangle/augury&#34; target=&#34;_blank&#34;&gt;rangle/augury: Angular 2 development tools for Chrome&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;language-services&#34;&gt;Language Services&lt;/h4&gt;

&lt;p&gt;TypeScriptのLanguage Servicesで、Angular 2のテンプレート内の入力補完を可能にする計画です。&lt;br /&gt;
そのために必要なコンポーネントメタデータの抽出はすでにtboschが実装を終えており、&lt;br /&gt;
次はそのデータをエディターで使えるようにする段階です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/angular/angular/issues/7482&#34; target=&#34;_blank&#34;&gt;Tracking: Language services provide intellisense for Angular 2 templates · Issue #7482 · angular/angular&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/typescript/issues/6508&#34; target=&#34;_blank&#34;&gt;TypeScript extensibility · Issue #6508 · Microsoft/TypeScript&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;nglint&#34;&gt;ngLint&lt;/h4&gt;

&lt;p&gt;Minko GechevがAngular 2のlinterを開発しています。&lt;br /&gt;
Language Serviceと統合することでコマンドラインやIDE上にメッセージを表示できるようになります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mgechev/codelyzer&#34; target=&#34;_blank&#34;&gt;mgechev/codelyzer&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;router&#34;&gt;Router&lt;/h3&gt;

&lt;p&gt;Finalリリースに向けて幾つかのAPIの変更が行われます。&lt;br /&gt;
将来的に、コードの分割と遅延読み込みが自動的に行えるようになります。&lt;br /&gt;
APIを今よりシンプルにして混乱を避けるようにし、クリティカルなバグを取り除きます。&lt;/p&gt;

&lt;h3 id=&#34;animation&#34;&gt;Animation&lt;/h3&gt;

&lt;p&gt;まもなくngAnimate2の最初のリリースが行われる予定です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/angular/angular/pull/7698&#34; target=&#34;_blank&#34;&gt;wip: feat(animations): introduce animation support for angular2 by matsko · Pull Request #7698 · angular/angular&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;i18n&#34;&gt;i18n&lt;/h3&gt;

&lt;p&gt;文字列抽出とngPluralディレクティブが実装されています。&lt;br /&gt;
残りは実装した機能を実際に使いやすくするステップです。&lt;br /&gt;
ただし残りの作業は最初のコアの変更にブロックされています。&lt;/p&gt;

&lt;h3 id=&#34;typescript-google&#34;&gt;TypeScript @ Google&lt;/h3&gt;

&lt;p&gt;GoogleもTypeScriptの開発に協力しているようで、そのチームによる最初の成果がプロダクションに入るようです。&lt;/p&gt;

&lt;h3 id=&#34;モバイル&#34;&gt;モバイル&lt;/h3&gt;

&lt;p&gt;Angular 2を使ってProgressive Web Appを作りやすくするようにするのが目的の取り組みです。&lt;br /&gt;
まずはGitHub管理アプリをサンプルとして開発中です。&lt;br /&gt;
計画ではその成果をng-confとGoogle I/Oで紹介する予定です。&lt;/p&gt;

&lt;p&gt;これらについてはmobile.angular.ioで別サイトとして独立したコンテンツになります。&lt;/p&gt;

&lt;h3 id=&#34;marcy-sutton&#34;&gt;Marcy Sutton&lt;/h3&gt;

&lt;p&gt;Marcy SuttonさんがMountain Viewに来るのでアクセシビリティについてAngularチームとミートアップするようです。&lt;br /&gt;
また、アクセシビリティについてのクックブックを作成中です。&lt;/p&gt;

&lt;h3 id=&#34;angular-cli-1&#34;&gt;Angular CLI&lt;/h3&gt;

&lt;p&gt;Hansがデザインドキュメントを作成中です。&lt;br /&gt;
次のバージョンではng1からのマイグレーションにも対応するようです。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;てんこもりの内容でした。ng-confに向けてどんどん開発が加速しています。今週のbeta.15もてんこもりの内容になりそうなので、要チェックです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>週次ミーティング、海外記事の紹介他</title>
      <link>https://ng2-info.github.io/2016/03/weekly-meeting-mar-1/</link>
      <pubDate>Tue, 01 Mar 2016 21:55:29 +0900</pubDate>
      
      <guid>https://ng2-info.github.io/2016/03/weekly-meeting-mar-1/</guid>
      <description>

&lt;p&gt;こんにちは、らこです。今回は内容盛りだくさんです。&lt;/p&gt;

&lt;h2 id=&#34;週次ミーティング&#34;&gt;週次ミーティング&lt;/h2&gt;

&lt;p&gt;まずは週次ミーティングについて。ここ2週間ミーティングもリリースもなかったのはオフサイトを行っていたかららしく、今週から完全復活の模様です。&lt;/p&gt;

&lt;h3 id=&#34;batarangle&#34;&gt;Batarangle&lt;/h3&gt;

&lt;p&gt;AngularJSのデバッガとして有名なChrome拡張のBatarangが、Angular 2対応した「Batarangle」をリリースしています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://go.rangle.io/batarangle&#34; target=&#34;_blank&#34;&gt;Batarangle.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;近いうちにBatarangleを使ったデバッグに関するドキュメントを公式に出す予定だそうです。&lt;/p&gt;

&lt;h3 id=&#34;オフサイトについて&#34;&gt;オフサイトについて&lt;/h3&gt;

&lt;p&gt;今後の長期的な計画についてオフサイトで話し合ったようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アップグレードを簡単にすることでAngular 2を古くならないようにする(古いバージョンのAngularが使われ続けないようにする)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;ビジュアルデザイナー向けのツールを提供する&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という2つの大きな展望が掲げられたようです。&lt;/p&gt;

&lt;h3 id=&#34;ビルド環境とciについて&#34;&gt;ビルド環境とCIについて&lt;/h3&gt;

&lt;p&gt;先週AngularチームはCI環境の改善について多くの時間を割いたらしく、頻繁に落ちるテストを直したり無効にしたりと忙しかったようです。&lt;br /&gt;
(これで先週はPRがほとんど処理できてなかったゴメンよということらしい)&lt;br /&gt;
現在PRを出してもなかなかCI結果が緑にならず、安心してマージできないことが多々あります。&lt;br /&gt;
特にSauce Labのテストは特に頼りないので、なんとかしたいねという話をしています。&lt;/p&gt;

&lt;h3 id=&#34;マイルストーンについて&#34;&gt;マイルストーンについて&lt;/h3&gt;

&lt;p&gt;今週末までに、Angular 2最終版(Stableリリースのことだと思われる)までのマイルストーンを発表するらしいです。超楽しみ！&lt;/p&gt;

&lt;h3 id=&#34;routerのアップデートについて&#34;&gt;Routerのアップデートについて&lt;/h3&gt;

&lt;p&gt;Routerのアップデートがやはり来るようです。主に作業しているのはBrianとNaomiとIgorです。(Brianは今バケーションとのこと)&lt;br /&gt;
ただしアップデートはできるだけ段階的に行い、劇的な破壊的変更は出さないようにするとのこと。新しいRouterの機能として計画されているのは、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;静的なリンクチェック(&lt;code&gt;routerLink&lt;/code&gt;が静的解析可能になる？)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;canActivate&lt;/code&gt;(今はデコレータで提供されているが、ライフサイクルとして再実装されるっぽい=&amp;gt;DIが使えるようになる)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;非同期モジュール読み込みのサポート(これは一番最後に実装する予定)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;もっとわかりやすいRouter API(Router Link DSLの廃止？)&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今月からはRouterが大きく変わりそうです。要注目。&lt;/p&gt;

&lt;p&gt;補足情報として、&lt;code&gt;ui-router&lt;/code&gt;がAngular 2に対応し始めたようです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/angular-ui/ui-router/commit/217de70449c7870057d440d161752f1945dc4937&#34; target=&#34;_blank&#34;&gt;feat(ui-router-ng2): Initial angular2 support · angular-ui/ui-router@217de70&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;まだ正式リリースはされていませんがnpmでインストールすればng2用のソースを使えるようです。興味のある人は試してみては。&lt;br /&gt;
個人的にはComponent Routerでお腹いっぱいです。&lt;/p&gt;

&lt;h3 id=&#34;溜まってるprについて&#34;&gt;溜まってるPRについて&lt;/h3&gt;

&lt;p&gt;先述の通り先週はいろいろと忙しくてPRを見られてなかったので、今週はその消化に充てたいとのこと。&lt;/p&gt;

&lt;h3 id=&#34;angularjsの使われ方に関する調査&#34;&gt;AngularJSの使われ方に関する調査&lt;/h3&gt;

&lt;p&gt;グーグルのクローラを使って分析したところ、現在150000ドメインのウェブサイトがAngular 1を使っており、&lt;br /&gt;
ページ数でいえば200000000件にも及ぶとのこと。&lt;/p&gt;

&lt;p&gt;ただし使われているバージョンはまだ多くが1.4への移行中であり、1.5がリリースされたにもかかわらずまだ0.9.16を使っているサイトもあるらしいです。&lt;br /&gt;
この問題を解決するために現在の安定バージョンへのアップグレードを推奨するポリシーをつくります。&lt;br /&gt;
明日、明後日にも作成されるらしいです。&lt;/p&gt;

&lt;h3 id=&#34;nganimateについて&#34;&gt;ngAnimateについて&lt;/h3&gt;

&lt;p&gt;Angular 2用の&lt;strong&gt;ngAnimate&lt;/strong&gt;がいよいよあと数週間でプロトタイプを完成させるようです。主な機能は以下のとおり&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アノテーションレベルでのアニメーション記述&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;CSSパーサの実装&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;シーケンス処理&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Web Animations APIとの連携&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ngAnimateを使うためのコードは驚くほど少なく、スタイルとアニメーションが分離されるのでシンプルな記述ができます。&lt;br /&gt;
DOMの計算も少なく、とてもハイパフォーマンスなアニメーションを実装しています。&lt;br /&gt;
Web Animations APIについては、現在ChromeとFirefoxでだけサポートされているので他のブラウザではpolyfillを必要とします。&lt;br /&gt;
ただしpolyfillをそのまま同梱すれば楽ではありますがサイズが12kbと大きいので、最小限のものを実装し直すつもりだそうです。&lt;/p&gt;

&lt;h2 id=&#34;angularjsについて&#34;&gt;AngularJSについて&lt;/h2&gt;

&lt;p&gt;Angular 1.5.1が近日中にリリースされる予定です。&lt;br /&gt;
また、Angular 1.6系の計画も進んでいます。機能としてはAngular 2につなげるためのものですが、破壊的変更がある場合はまず1.6で実装し、&lt;br /&gt;
その後1.5系にバックポートしていくという方針らしいです。1.5系をLTS的に扱いたい雰囲気を感じます。&lt;/p&gt;

&lt;h2 id=&#34;ng-japan&#34;&gt;ng-japan&lt;/h2&gt;

&lt;p&gt;今月の21日に開催される &lt;strong&gt;ng-japan&lt;/strong&gt; の参加申し込みが今日行われ、あっという間に260人のチケットが埋まってしまいました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ngjapan.org/&#34; target=&#34;_blank&#34;&gt;ng-japan - The Angular conference in Tokyo, Japan (2016/3/21)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;募集開始前にng2-infoでも告知しようと思っていたのですがすっかり忘れていました。すみません :P&lt;br /&gt;
一応キャンセル待ちはできるので、万が一に備えて応募しておくと良いと思います。&lt;/p&gt;

&lt;p&gt;またこれはまだ未定なのですが、ng-japanの翌週にアフターイベントということで軽いミートアップを開催しようと思っています。&lt;br /&gt;
「ng-japanで学んだことを試してみたけどわからなかった」とか、「ng-japan行けなかったけど聞きたいことがあった」とか、&lt;br /&gt;
そういう部分をフォローするためのアフターイベントにするつもりです。また詳しいことが決まり次第告知します。&lt;/p&gt;

&lt;h2 id=&#34;海外ブログ紹介&#34;&gt;海外ブログ紹介&lt;/h2&gt;

&lt;p&gt;続々と海外のブログで面白い記事が出てきています。&lt;/p&gt;

&lt;h3 id=&#34;components-with-custom-templates-in-angular-2-http-www-michaelbromley-co-uk-blog-513-components-with-custom-templates-in-angular-2&#34;&gt;&lt;a href=&#34;http://www.michaelbromley.co.uk/blog/513/components-with-custom-templates-in-angular-2&#34; target=&#34;_blank&#34;&gt;Components with Custom Templates in Angular 2&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;ComponentのテンプレートHTMLを動的に差し替える方法についての実践的な内容です。&lt;/p&gt;

&lt;h3 id=&#34;how-to-build-angular-2-apps-using-observable-data-services-pitfalls-to-avoid-http-blog-jhades-org-how-to-build-angular2-apps-using-rxjs-observable-data-services-pitfalls-to-avoid&#34;&gt;&lt;a href=&#34;http://blog.jhades.org/how-to-build-angular2-apps-using-rxjs-observable-data-services-pitfalls-to-avoid/&#34; target=&#34;_blank&#34;&gt;How to build Angular 2 apps using Observable Data Services - Pitfalls to avoid&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Observableを活用したデータサービスを実装する際の落とし穴と避け方についての内容です。&lt;br /&gt;
合わせて読みたいのはこちら&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.bennadel.com/blog/3035-http-requests-are-cold-lazy-streams-in-angular-2-beta-6.htm&#34; target=&#34;_blank&#34;&gt;HTTP Requests Are Cold / Lazy Streams In Angular 2 Beta 6&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/toRisouP/items/f6088963037bfda658d3&#34; target=&#34;_blank&#34;&gt;RxのHotとColdについて - Qiita&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;RxJSのObservableの*Hot*と*Cold*の違いを理解することが大事です。&lt;br /&gt;
特に最も重要なAjaxは、&lt;code&gt;http.get&lt;/code&gt;の戻り値のObservableがColdであることに留意しないと挙動に悩まされるでしょう&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;今週はおそらくBeta.8がリリースされるでしょう。それではまた。&lt;/p&gt;

&lt;p&gt;参考URL&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/150lerb1LmNLuau_a_EznPV1I1UHMTbEl61t4hZ7ZpS0/edit#heading=h.v9yw0ynxk8hq&#34; target=&#34;_blank&#34;&gt;Angular Weekly Meeting - Google ドキュメント&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1xKEbydyUEOQ_gTbcbxy_k2myctG8EiVbeMgLgXTxIc0/edit#heading=h.yu4zcypn0qmi&#34; target=&#34;_blank&#34;&gt;Angular 1.x Meeting Notes - Google ドキュメント&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1j6Crqk5rLwJH_iahUStnlaXNfuJZH2cwOZwAYq0p218/edit#heading=h.qr27868rrp3z&#34; target=&#34;_blank&#34;&gt;Angular2 - Animation Meeting Notes - Google ドキュメント&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>1/25 週次ミーティング議事録</title>
      <link>https://ng2-info.github.io/2016/01/weekly-meeting-jan-25/</link>
      <pubDate>Tue, 26 Jan 2016 10:11:27 +0900</pubDate>
      
      <guid>https://ng2-info.github.io/2016/01/weekly-meeting-jan-25/</guid>
      <description>

&lt;p&gt;こんにちは。今週のAngularチームの週次ミーティングについての情報です。&lt;br /&gt;
今後のリリースや計画について多く言及されているので要チェックな内容です。&lt;/p&gt;

&lt;p&gt;議事録は&lt;a href=&#34;https://docs.google.com/document/d/150lerb1LmNLuau_a_EznPV1I1UHMTbEl61t4hZ7ZpS0/edit#&#34; target=&#34;_blank&#34;&gt;こちら&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;demo-of-the-new-dart-dev-compiler-for-the-team&#34;&gt;Demo of the new Dart Dev Compiler for the team&lt;/h3&gt;

&lt;p&gt;Angularチーム内でDDCを使った開発のデモが行われたようです。&lt;br /&gt;
DDCはDartの新しいコンパイラで、特徴はヒューマンリーダブルなES6を吐き出すことです。&lt;br /&gt;
DDCによる開発をサポートすることで、Angular2 for Dartユーザの開発サイクルを改善できるとしています。&lt;/p&gt;

&lt;p&gt;DDCがサポートされるとDartium以外のブラウザでも即時コンパイルが可能になり、&lt;br /&gt;
さらにDDCが吐き出したES6はBabelなどのコンパイラでさらにES5に変換可能とのこと。&lt;br /&gt;
DDCがどれほど安定しているのかはさておき、for Dartのユーザには朗報です。&lt;/p&gt;

&lt;h3 id=&#34;update-on-i18n-support&#34;&gt;Update on i18n support&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;2016/01/16/working-about-i18n-in-jan/&#34; target=&#34;_blank&#34;&gt;先日取り上げた&lt;/a&gt;Angular2のi18n対応についての続報です。&lt;/p&gt;

&lt;p&gt;i18n対応の目標は&lt;code&gt;{% raw %}{{}}{% endraw %}&lt;/code&gt;によってテンプレートを多言語化することであると改めて定められ、&lt;br /&gt;
まずはじめに静的な文字列について翻訳できるように翻訳できるように作業中とのこと。&lt;br /&gt;
将来的には性別や単数・複数形などの動的なシナリオについてもサポートする予定です。&lt;/p&gt;

&lt;p&gt;忙しくて忘れられているのではないかと思われていましたが、ちゃんと取り組んでいて安心しました。&lt;/p&gt;

&lt;h3 id=&#34;router-update&#34;&gt;Router update&lt;/h3&gt;

&lt;p&gt;Routerモジュールのアップデートが行われます。&lt;br /&gt;
遅延ローディングや、コンポーネントとルーティング設定のコードの分割を可能にするための修正が行われる予定で、&lt;br /&gt;
この変更のために現在のRouterのシンタックスが多少変わる可能性があります。&lt;/p&gt;

&lt;p&gt;ただし今後数週間かけて改修を行うとのことで、今すぐに破壊的変更が来ることはないでしょう。&lt;/p&gt;

&lt;h3 id=&#34;angular-1-5-update&#34;&gt;Angular 1.5 update&lt;/h3&gt;

&lt;p&gt;AngularJSの1.5 RC2が水曜日（日本時間だと木曜日）にリリース予定です。&lt;br /&gt;
そして、1.5の最終版は来週、遅くても再来週にはリリースするとのこと。&lt;/p&gt;

&lt;p&gt;1.5 finalに向け、Brian氏はAngular2のComponent Routerと協調できるように作業中らしく、&lt;br /&gt;
&lt;code&gt;component&lt;/code&gt;の導入によってAngular2と同じスタイルでComponent Routerを使って開発できるようになるようです。&lt;/p&gt;

&lt;p&gt;1.5 finalのリリース時には&lt;code&gt;component&lt;/code&gt;の使い方についてのチュートリアルやドキュメントを整備するらしく、&lt;br /&gt;
まだAngular2に触れていないAngularJSユーザでもスムーズにコンポーネント化を進めることができるでしょう。&lt;/p&gt;

&lt;h3 id=&#34;animation-update&#34;&gt;Animation Update&lt;/h3&gt;

&lt;p&gt;Animationサポートについても情報の更新がありました。&lt;br /&gt;
Animationモジュールのデザインドキュメントが&lt;a href=&#34;https://docs.google.com/document/d/1rTJKNJ6Rv2N5jElLIrrukuEsS_kFOQPH1D5O1Dfva44/edit#heading=h.x01aekc0f0sk&#34; target=&#34;_blank&#34;&gt;公開&lt;/a&gt;され、&lt;br /&gt;
CSSと協調したアノテーションベースのアニメーション記述を可能にする方針であることがわかりました。&lt;br /&gt;
また、アニメーションにはW3Cで仕様策定中の&lt;a href=&#34;https://www.w3.org/TR/web-animations-1/&#34; target=&#34;_blank&#34;&gt;Web Animations API&lt;/a&gt;を使用するようです。&lt;/p&gt;

&lt;p&gt;現在はCSSを解釈するためのパーサが開発中で、まもなく完成します。&lt;br /&gt;
&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1G5-hb4DpqddLtDV0PD0cueeVh7Eb8o7fPmNryX4AvGM/edit#gid=0&#34; target=&#34;_blank&#34;&gt;残りのタスク&lt;/a&gt;はまだたくさんありますが、&lt;br /&gt;
すでに半分は作業中なのでパーサさえできてしまえば案外早くBetaに入ってくるのではないでしょうか。&lt;/p&gt;

&lt;h3 id=&#34;mobile-update&#34;&gt;Mobile update&lt;/h3&gt;

&lt;p&gt;モバイル対応についての情報も追加されました。&lt;/p&gt;

&lt;p&gt;リアルタイムDBのFirebaseをAngularJSから使うライブラリとしてAngularFireというものがありますが、&lt;br /&gt;
Angular2用のAngularFire 2のアルファ版が近々公開される予定です。&lt;/p&gt;

&lt;p&gt;また、Angular2を使ったProgressive Web Appのリファレンスとなるアプリケーションを開発中で、&lt;br /&gt;
サーバサイドレンダリングやService Worker、Web Worker、HTTP/2などの要素を盛り込むとのこと。&lt;/p&gt;

&lt;h3 id=&#34;angular-2-release-plan&#34;&gt;Angular 2 release plan&lt;/h3&gt;

&lt;p&gt;最後に、今後のAngular2 Betaのリリースに関する情報です。&lt;br /&gt;
最近はBeta版で落ち着いていた印象ですが、今週、遅くても来週あたりからはAlphaの頃と同じく&lt;br /&gt;
毎週リリースを行う計画です。&lt;br /&gt;
次のリリースから最終版までずっとそのペースで行くつもりらしく、開発陣の気合の入りようが伺えます。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;先週の週次ミーティングがなかった分、盛りだくさんの内容になりました。&lt;/p&gt;

&lt;p&gt;おまけですが、AngularConnect 2016のWebサイトが公開されました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://angularconnect.com/&#34; target=&#34;_blank&#34;&gt;Home page | AngularConnect - The Official European Angular Conference 2016&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;今年は9月の26日、27日にロンドンで行われます。&lt;br /&gt;
9月にはもうRC版になっているのか、まだBetaなのか、はたまたもうfinalになっているのかわかりませんが&lt;br /&gt;
去年のような充実したイベントになるのは間違いないでしょう。とても楽しみですね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>1/23 最近のAngular2の動き</title>
      <link>https://ng2-info.github.io/2016/01/works-in-progress-jan-23/</link>
      <pubDate>Sat, 23 Jan 2016 21:27:40 +0900</pubDate>
      
      <guid>https://ng2-info.github.io/2016/01/works-in-progress-jan-23/</guid>
      <description>

&lt;p&gt;Beta.1以降しばらく目立った動きがないですが、Beta.2に向けていくつかの面白い変更があるので紹介します。&lt;/p&gt;

&lt;h3 id=&#34;ddcビルドの必須化&#34;&gt;DDCビルドの必須化&lt;/h3&gt;

&lt;p&gt;Dartの新コンパイラであるDart Dev Compiler(DDC)は現在も開発中ですが、&lt;br /&gt;
Angular2のCI設定が変わり、DDCでビルドが通ることが必須になりました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/dart-lang/dev_compiler&#34; target=&#34;_blank&#34;&gt;dart-lang/dev_compiler: Experimental Dart to JavaScript compiler designed to create idiomatic, readable JavaScript output.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/angular/angular/pull/6647&#34; target=&#34;_blank&#34;&gt;chore(ddc): make DDC build non-experimental by yjbanov · Pull Request #6647 · angular/angular&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DDCもちょうど1年くらい開発されていますし、そろそろ安心して使えるコンパイラになってきたんでしょうか。&lt;br /&gt;
TypeScript/JavaScript側には何も影響ないですが、Dartのソースコードの変更はDDCでもビルドできるように気を使わないといけません。&lt;/p&gt;

&lt;h3 id=&#34;プロジェクトのnpm-v3化&#34;&gt;プロジェクトのnpm v3化&lt;/h3&gt;

&lt;p&gt;開発環境のNodeバージョンが5.4系に上がり、それに合わせてnpmもv3系になりました。&lt;br /&gt;
依存しているパッケージも一気にアップデートされています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/angular/angular/pull/6213&#34; target=&#34;_blank&#34;&gt;build: npm dependencies update + dedupe by IgorMinar · Pull Request #6213 · angular/angular&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;今まではgit cloneしたあとのnpm installがnpm v2じゃないと行えなかったので、&lt;br /&gt;
npm v3になることでコントリビュートしやすくなりました。&lt;/p&gt;

&lt;p&gt;しかしAngular2のnpm配布パッケージは未だpeerDependenciesを使っており、RxJSやZone.jsなどを別にインストールしないといけない状況は変わっていません。&lt;/p&gt;

&lt;h3 id=&#34;angular2の型定義ファイルに関する変更&#34;&gt;Angular2の型定義ファイルに関する変更&lt;/h3&gt;

&lt;p&gt;現在、Angular2とjQueryの型定義が共存できない問題があります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/angular/angular/issues/5459&#34; target=&#34;_blank&#34;&gt;Type definition conflict with jQuery TSD · Issue #5459 · angular/angular&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;グローバルの&lt;code&gt;$&lt;/code&gt;変数が衝突しており、手作業でどちらかの型定義ファイルを編集しなければ解決できません。&lt;br /&gt;
直接の原因はAngular2の配布パッケージに含まれる型定義が、E2Eテスト用のパッケージである&lt;code&gt;angular-protractor&lt;/code&gt;の型定義を含んでいたことです。&lt;br /&gt;
テストにしか使わないもので本来必要ない型定義なので、通常のビルドとテスト用のビルドで依存する型定義を切り替える変更が入りました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/angular/angular/pull/6262&#34; target=&#34;_blank&#34;&gt;build(node): split test and src compilation units by vicb · Pull Request #6262 · angular/angular&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これがリリースされれば、AngularJSが依存しているjQueryとの衝突もなくなるはずなので、1系からのマイグレーションもやりやすくなるはずです。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;おそらく来週にはBeta.2がリリースされる雰囲気（あくまでも雰囲気）なので、アップデートを楽しみにしましょう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>i18n対応の現状について</title>
      <link>https://ng2-info.github.io/2016/01/working-about-i18n-in-jan/</link>
      <pubDate>Sat, 16 Jan 2016 15:45:25 +0900</pubDate>
      
      <guid>https://ng2-info.github.io/2016/01/working-about-i18n-in-jan/</guid>
      <description>&lt;p&gt;今回はAngular2の国際化対応(i18n)について。&lt;/p&gt;

&lt;p&gt;AngularJSではi18nを行うためにangular-translateなどのサードパーティ製ライブラリを使う必要がありました。&lt;br /&gt;
ところがAngular2ではライブラリの機能として、公式でi18nをサポートすると宣言しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://angular.io/features.html&#34; target=&#34;_blank&#34;&gt;INTERNATIONALIZATION (I18N) &amp;amp; ACCESSIBILITY&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Reach all your users. Use the familiar ICU message format in Angular interpolation syntax ({% raw %}{{ }}{% endraw %}), including pluralization and gender rules.&lt;br /&gt;
Automate message extraction, pseudo-localization, and translation updates.&lt;br /&gt;
Generate static applications for each locale.&lt;br /&gt;
Easily promote accessibility via screen readers and assistive devices by automatically generating appropriate ARIA attributes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;この説明文によれば&lt;code&gt;{% raw %}{{}}{% endraw %}&lt;/code&gt;で展開されるデータバインディングは自動で適切にローカライズされると書かれています。&lt;/p&gt;

&lt;p&gt;しかし今のところこの機能はほぼ進展がなく、i18n用と思われるリポジトリ &lt;a href=&#34;https://github.com/angular/i18n&#34; target=&#34;_blank&#34;&gt;angular/i18n&lt;/a&gt; は&lt;br /&gt;
開発途上のまま止まっています。&lt;br /&gt;
Angular2もbetaになったことでユーザからi18n機能の進展についての質問が増え始めましたが、&lt;br /&gt;
Issueでのやり取りで現状が把握できました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/angular/angular/issues/5953&#34; target=&#34;_blank&#34;&gt;i18n and L10n support · Issue #5953 · angular/angular&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;今のところ、公式のi18nはコアメンバーの多忙により進展がないようですが、&lt;br /&gt;
ocombe氏による&lt;a href=&#34;https://github.com/ocombe/ng2-translate/&#34; target=&#34;_blank&#34;&gt;ng2-translate&lt;/a&gt;が開発中のようです。&lt;br /&gt;
ng2-translateはangular-translateをAngular2に移植するプロジェクトで、&lt;br /&gt;
まだすべての機能は移行できていませんが一部はすでに使用可能とのこと。&lt;/p&gt;

&lt;p&gt;また、ocombe氏は公式のi18n機能が実装されたとしてもそれが自身の要求を満たさないものであれば、&lt;br /&gt;
ng2-translateの開発を継続するつもりらしいので、&lt;br /&gt;
今はとりあえずng2-translateを使っておけばどちらに転んでも大丈夫そうです。&lt;br /&gt;
（開発している本人が自分のためにマイグレーションをサポートするでしょう）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>1/11 週次ミーティング議事録</title>
      <link>https://ng2-info.github.io/2016/01/weekly-meeting-jan-11/</link>
      <pubDate>Tue, 12 Jan 2016 11:12:16 +0900</pubDate>
      
      <guid>https://ng2-info.github.io/2016/01/weekly-meeting-jan-11/</guid>
      <description>

&lt;p&gt;今週の週次ミーティングの議事録が公開されました。今週は2016年の方針決定を含めた重要な回でした。&lt;br /&gt;
先週の内容と重なる部分も多いですが、議事録と補足を。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/150lerb1LmNLuau_a_EznPV1I1UHMTbEl61t4hZ7ZpS0/edit&#34; target=&#34;_blank&#34;&gt;Angular Weekly Meeting&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;tim-presented-how-angular-2-transformer-for-dart-works&#34;&gt;Tim presented &amp;ldquo;How Angular 2 transformer for Dart works&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;去年から予告されているのですが、Angular2 for Dartにおいてtransformer（Dartのビルド時プリプロセッサ）がどう動いているのかを解説する記事が投稿されるようです。&lt;/p&gt;

&lt;h3 id=&#34;moved-angular-2-to-mit-license-based-on-developer-feedback-requests&#34;&gt;Moved Angular 2 to MIT license based on developer feedback/requests&lt;/h3&gt;

&lt;p&gt;Angular2のオープンソースライセンスがMITになりました。&lt;br /&gt;
主な理由は他の多くのライブラリと同じであり、わかりやすいからというリクエストが多かったからのようです。&lt;br /&gt;
詳細は&lt;a href=&#34;http://angularjs.blogspot.jp/2016/01/angular-2-mit-open-source-licensed.html&#34; target=&#34;_blank&#34;&gt;公式ブログ&lt;/a&gt;で説明されています。&lt;/p&gt;

&lt;h3 id=&#34;grand-plan-for-2016&#34;&gt;Grand plan for 2016&lt;/h3&gt;

&lt;p&gt;2016年のプロジェクトの大まかなプランが発表されました。&lt;/p&gt;

&lt;h4 id=&#34;launch-ng2-final-material-design-components-more-perf-less-payload-docs-animations-etc&#34;&gt;Launch ng2 final (material design components, more perf, less payload, docs, animations, etc.)&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;2016年中にAngular2を完成させます。&lt;/strong&gt; これはangular2-materialやドキュメント整備なども含めた完成です。&lt;/p&gt;

&lt;h4 id=&#34;mobile&#34;&gt;Mobile&lt;/h4&gt;

&lt;p&gt;モバイル環境では、&amp;rdquo;Progressive Web Apps&amp;rdquo;との連携にやる気充分です。&lt;br /&gt;
Progressive Web Appsは具体的にはServiceWorkerやPush Notification、Manifestなどを用いた&lt;br /&gt;
モバイル端末との連携機能によってネイティブアプリ同様のユーザ体験をもたらそうというものです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://sisidovski.hatenablog.com/entry/2015/12/04/120633&#34; target=&#34;_blank&#34;&gt;Progressive Web Appsについて - 銀色うつ時間&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;同じGoogle製のライブラリであるPolymerもServiceWorker連携のPolymer Elementsを公開していたので、&lt;br /&gt;
Angular2でもコアではなくオプションのライブラリによってServiceWorkerを使いやすくなる機能が追加されるかもしれません。&lt;/p&gt;

&lt;h4 id=&#34;desktop-install-infrastructure-via-electron-js&#34;&gt;Desktop install infrastructure (via electron.js)&lt;/h4&gt;

&lt;p&gt;デスクトップ環境では、Node上でAngular2を動作させ、Electronとの連携を推し進めます。&lt;br /&gt;
ワーカーを使わなくてもブラウザ側で処理することもできますが、&lt;br /&gt;
分離しておくことで同じアーキテクチャがサーバサイドレンダリングでも、WebWorkerでも適用できます。&lt;/p&gt;

&lt;p&gt;実際にAngular2のレンダリングをElectronのワーカーで行い、IPCでブラウザ側と通信するサンプルをrobwormald氏が作っています。&lt;br /&gt;
&lt;a href=&#34;https://github.com/robwormald/ng2-electron&#34; target=&#34;_blank&#34;&gt;robwormald/ng2-electron&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;また、このワークフローをAngular CLIでサポートする予定があるようです。&lt;/p&gt;

&lt;h4 id=&#34;long-term-performance-plans&#34;&gt;Long term performance plans&lt;/h4&gt;

&lt;p&gt;次はパフォーマンス改善です。Angular2は最初からパフォーマンスを売りにしてきましたので、可能な限り向上させようという意気込みが感じられます。&lt;br /&gt;
実行速度のパフォーマンスは十分に速くなっているので、これからはペイロードサイズの削減などプロダクションを見据えた広い意味のパフォーマンスを改善していきます。&lt;/p&gt;

&lt;h4 id=&#34;reboot-the-web-build-system&#34;&gt;Reboot the web build system&lt;/h4&gt;

&lt;p&gt;これは初耳なのですが、現行のビルドシステムに変わる新しい物を作ろうとしているのでしょうか。&lt;br /&gt;
関連するドキュメントもなく詳細は不明です。&lt;/p&gt;

&lt;h3 id=&#34;update-on-angular-2-vs-angular-1-traffic&#34;&gt;Update on Angular 2 vs Angular 1 traffic&lt;/h3&gt;

&lt;p&gt;現状のAngular2のAngular1(AngularJS)のウェブサイトにおけるトラフィック比較が更新されました。&lt;/p&gt;

&lt;p&gt;30日間のアクセス数は、AngularJS(angularjs.org)が1.06M、Angular2(angular.io)が210Kで、&lt;br /&gt;
Angular2が占める割合は19.8%まで上がりました（前回から10%増）。&lt;/p&gt;

&lt;h3 id=&#34;mary-poppins-chatbot-status-update&#34;&gt;Mary Poppins Chatbot status update&lt;/h3&gt;

&lt;p&gt;SlackとGitHub上でタスクを自動処理するbot（Mary Poppins）を改修中です。&lt;/p&gt;

&lt;h3 id=&#34;material-design-for-angular-2&#34;&gt;Material Design for Angular 2&lt;/h3&gt;

&lt;p&gt;angular-materialのAngular2版(angular2-material)が始動し、現在はコアメンバーによるデザインの議論中です。&lt;br /&gt;
angular2-materialではバージョンごとの差異をスクリーンショットで比較できるツールを用意するようです。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Beta.1のリリース、グランドプランの決定など、年明け後も勢いは衰えてないですね。&lt;br /&gt;
3月にはng-japan、5月にはng-confが控えていますので楽しみにしていましょう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2016年のAngular2について</title>
      <link>https://ng2-info.github.io/2016/01/angular2-in-2016/</link>
      <pubDate>Thu, 07 Jan 2016 12:07:19 +0900</pubDate>
      
      <guid>https://ng2-info.github.io/2016/01/angular2-in-2016/</guid>
      <description>

&lt;p&gt;2015年12月にBeta.0バージョンをリリースしたあと、年末年始の休暇もあってしばらくおとなしかったAngular2開発チームですが、今週から本格的にBeta.1に向かって活動を再開しました。&lt;br /&gt;
新年最初のミーティングが1/4に行われたので、その議事録から今後の短期〜中期のAngular2の展望を予想します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/150lerb1LmNLuau_a_EznPV1I1UHMTbEl61t4hZ7ZpS0/edit#&#34; target=&#34;_blank&#34;&gt;議事録&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;post-beta-0-and-post-ngmaterial-1-0-check-in-and-what-s-next-brad-igor&#34;&gt;Post beta.0 (and post ngmaterial 1.0) check-in and what&amp;rsquo;s next? (Brad/Igor)&lt;/h3&gt;

&lt;p&gt;まずはじめに、angular2 beta.0とangular-matetial 1.0がリリースされたので、次に何を行うべきかを話し合っています。&lt;br /&gt;
挙げられたのは次の項目&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;パフォーマンスの向上とライブラリのファイルサイズ圧縮&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;FormやRouterについてのフィードバックを公開&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;angular2-materialの開発&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;GoogleでのTypeScriptサポートを拡充する&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Angular2のトレーニング用のコンテンツの拡充&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;開発ガイドとAPIリファレンス、exampleのテスト&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この他に重要なものは個別に下で述べられています。&lt;/p&gt;

&lt;h3 id=&#34;ng-merry-cleanup-2015-igor&#34;&gt;ng-merry-cleanup 2015 (Igor)&lt;/h3&gt;

&lt;p&gt;ng-merry-cleanup（merry-christmasとかけた？）という名前で、2015年柱に溜まったIssueやPRややり残し、負債、いろいろなものを処理するミニプロジェクトが立ち上がっています。&lt;br /&gt;
&lt;a href=&#34;https://docs.google.com/document/d/13RcOCClz_FyKSthZgFTDnHUYfRoHnyCcz5MQFarLSAk/edit&#34; target=&#34;_blank&#34;&gt;ドキュメント&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このプロジェクトの目的は開発チームの生産性向上で、直接我々ユーザー側に影響することはほとんどないですが、唯一npm3対応だけは影響がありそうです。&lt;br /&gt;
npm3対応はBrian氏が地道にマイグレーション作業を行っています。&lt;/p&gt;

&lt;h3 id=&#34;interactive-mary-poppins-matias&#34;&gt;Interactive Mary Poppins (Matias)&lt;/h3&gt;

&lt;p&gt;GitHub上のbotの話題です。Mary PoppinsというのはAngularJSのプロジェクトで動いているGitHubのbotで、PRの受付などいろいろ自動化してくれるやつですが、それをさらに強化したものを検討中ということです。&lt;/p&gt;

&lt;h3 id=&#34;caretaker-igor&#34;&gt;Caretaker (Igor)&lt;/h3&gt;

&lt;p&gt;旅行中などに誰が管理人を代行するのかなど、プロジェクトの運営に関する話題です&lt;/p&gt;

&lt;h3 id=&#34;the-journey-to-10k-igor&#34;&gt;The Journey to 10K (Igor)&lt;/h3&gt;

&lt;p&gt;Angular2のファイルサイズを2016年中に10kB以下まで減らそうという計画が立ち上がっています。海外のモバイルは未だ2G回線などの需要もあるので、それらを意識した取り組みです。&lt;/p&gt;

&lt;p&gt;現在のライブラリの仕組みでは、アプリケーションの規模にかかわらずAngular2のすべてのコードをロードしてしまうので、とても小さなアプリケーションでもペイロードのサイズは肥大化してしまいます。これを解決し、使用する機能に応じて小分けにインポートできる仕組みを目指しています。&lt;/p&gt;

&lt;p&gt;現在のAngular2は164kB (angular2.min.js + dependencies)ですが、3月までのQ1の間にAngularJSと同じ50kBまで減らせるようにする見込みです。&lt;/p&gt;

&lt;h3 id=&#34;angular-dream-ci-igor&#34;&gt;Angular Dream CI (Igor)&lt;/h3&gt;

&lt;p&gt;現在のTravis CIが不便らしく、いろいろやるようです。詳細は後日出てくるらしい。&lt;/p&gt;

&lt;h3 id=&#34;analytics-igor&#34;&gt;Analytics (Igor)&lt;/h3&gt;

&lt;p&gt;Google Analyticsを使って開発チームの生産性を向上させる計画があるようです。&lt;/p&gt;

&lt;h3 id=&#34;pre-tc39-briefing-igor&#34;&gt;pre-TC39 briefing (Igor)&lt;/h3&gt;

&lt;p&gt;Angular2チームとMSが合同で、Zones(zone.js), Decorators(TypeScript decorators), Module Loader(おそらくSystemJSベース)をTS39のプロポーザルとして持ち込もうとしているようです。&lt;/p&gt;

&lt;h3 id=&#34;even-faster-angular-2-tobias&#34;&gt;Even faster Angular 2 (Tobias)&lt;/h3&gt;

&lt;p&gt;最後にパフォーマンス向上についての話題です。&lt;br /&gt;
近いうちにオフラインコンパイルという新しい仕組みが導入され、ライブラリからAngular2のコンパイラを分離することでスタートアップ時間やペイロードサイズの圧縮が実現できるようです。&lt;/p&gt;

&lt;p&gt;プロポーザルのドキュメントは&lt;a href=&#34;https://docs.google.com/document/d/11r8IuS4xDyhVSEBp7fDYo7aiLYsLEXKs4lPd36umUGM/edit&#34; target=&#34;_blank&#34;&gt;こちら&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DIに関しても同様に静的に解決してしまうことでペイロードサイズをどんどん減らそうという計画もあります。&lt;/p&gt;

&lt;p&gt;コンパイル結果はヒューマンリーダブルで読みやすく、出力後のコードをさらにオンライン処理（今までどおりのAngular2の使い方）に持ち込むこともできる予定です。&lt;br /&gt;
デバッグも行いやすくなり、ComponentのHTMLテンプレート中にブレークポイントを作れるようになるかもとのこと。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;4日のミーティングの議事録はここまでですが、11日に2016年のAngular2のプランについてアナウンスをする予定らしいので、そこでまた詳しい話があるかもしれません。期待しましょう。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>